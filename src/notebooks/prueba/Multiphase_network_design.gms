Set n(*) "Nodes in the network";
Alias(n,nn);
Set i(n) "Source nodes / multi-phase";
Set j(n) "Junction nodes / multi-phase";
Set pf(n) "Processing facilities";
Set arcs(n,nn) "Allowed connections";
Set t(*) "Time periods";
Alias(t,tt);
Set tp(t) "Time periods where there is a production peak";
Set c(*) "Flow components";
Set d(*) "Pipeline diameter options";
Set s(*) "Facility sizes";
Parameter Qprod(t) "Oil production at each node at 't' periods after start-time [BBL per day]";
Parameter st_time(i) "Production start time of source node 'i' ";
Parameter capacity(s,c) "Capacity for facility size 's' and component 'c' [mscf per day]";
Parameter facility_cost_size(s) "Cost for facility size 's' [MMUSD]";
Parameter diameter_cost(d) "Pipeline cost per km for diameter size 'd' [kUSD/mile]";
Parameter ir "Interest rate [%]" / 0.008333333333333333 /;
Parameter dist(n,nn) "Distance between nodes'n' to 'nn' [mile]";
Parameter fluid_mult(c) "Multiplier to convert oil production to each component";
Parameter maxFlow(c,t) "Maximum flow of component 'c' during time period 't' [mscf per day]";
binary Variable y_pf(pf,s,t) "Equals 1 if a processing facility of size 's' is installed at node 'pf' during time period 't'";
binary Variable x_bar(n,nn,d,t) "Equals 1 if a pipeline segment of diameter 'd' between nodes 'n' and 'nn' is installed at time period 't'";
positive Variable Qinter(n,nn,d,t,c) "Flow of component 'c' through pipeline segment between nodes 'n' and 'nn' of diameter 'd' during time period 't' [mscf per day]";
positive Variable Qprocess(pf,t,c) "Amount of component 'c' processed at facility 'pf' during time period 't' [mscf per day]";
positive Variable accumulated_capacity(pf,t,c) "Total accumulated capacity at processing facility 'pf' of component 'c' during time period 't' [mscf per day]";
positive Variable pipe_cost(t) "Total cost on pipeline installation during time period 't' [kUSD]";
positive Variable facility_cost(t) "Total cost on facility installation during time period 't' [kUSD]";
free Variable total_cost "Total discounted cost [MMUSD]";
Equation mass_balance_ij(i,c,t) "Mass balance for source-junction";
Equation mass_balance_jpf(j,c,t) "Mass balance for junction-processing facility";
Equation mass_balance_pf(pf,c,t) "Mass balance for processing facility";
Equation compute_pipe_cost_per_t(t) "Compute total pipeline installation cost at period 't' ";
Equation compute_facility_cost_per_t(t) "Compute total facility installation cost at period 't' ";
Equation compute_total_cost "Compute total discounted cost";
Equation facility_capacity(pf,t,c) "Facility must have enough processing capacity for each component";
Equation pipeline_capacity(n,nn,d,t,c) "A pipeline must be installed to transport flow";
Equation unique_capacity(n) "Just one pipeline can be installed for each connection";
Equation def_acum_cap(pf,c,t) "Compute accumulated capacity of processing facility at each time period";
Model Multiphase_network_design / mass_balance_ij,mass_balance_jpf,mass_balance_pf,compute_pipe_cost_per_t,compute_facility_cost_per_t,compute_total_cost,facility_capacity,pipeline_capacity,unique_capacity,def_acum_cap /;
$onMultiR
$gdxLoadAll c:\Users\Diego\Desktop\ExxonMobil\LM_Gathering\src\notebooks\prueba\Multiphase_network_design_data.gdx
$offMulti
mass_balance_ij(i,c,t) $ (ord(t) >= st_time(i)) .. (sum(tt $ (ord(tt) eq ((ord(t) + 1) - st_time(i))),Qprod(tt)) * fluid_mult(c)) =e= sum((nn,d) $ arcs(i,nn),Qinter(i,nn,d,t,c));
mass_balance_jpf(j,c,t) .. sum((nn,d) $ arcs(nn,j),Qinter(nn,j,d,t,c)) =e= sum((nn,d) $ arcs(j,nn),Qinter(j,nn,d,t,c));
mass_balance_pf(pf,c,t) .. sum((nn,d) $ arcs(nn,pf),Qinter(nn,pf,d,t,c)) =e= Qprocess(pf,t,c);
compute_pipe_cost_per_t(t) .. pipe_cost(t) =e= sum(d,(diameter_cost(d) * sum((n,nn) $ arcs(n,nn),(dist(n,nn) * x_bar(n,nn,d,t)))));
compute_facility_cost_per_t(t) .. facility_cost(t) =e= (1000 * sum((pf,s),(facility_cost_size(s) * y_pf(pf,s,t))));
compute_total_cost .. total_cost =e= (sum(t,(rPower((1 + ir),( - (ord(t) - 1))) * (pipe_cost(t) + facility_cost(t)))) / 1000);
facility_capacity(pf,t,c) $ tp(t) .. Qprocess(pf,t,c) =l= accumulated_capacity(pf,t,c);
pipeline_capacity(n,nn,d,t,c) $ (arcs(n,nn) and tp(t)) .. Qinter(n,nn,d,t,c) =l= (maxFlow(c,t) * sum(tt $ ((ord(tt) <= ord(t)) and tp(tt)),x_bar(n,nn,d,tt)));
unique_capacity(n) .. sum((nn,d,t) $ (arcs(n,nn) and tp(t)),x_bar(n,nn,d,t)) =l= 1;
def_acum_cap(pf,c,t) .. sum((s,tt) $ (ord(tt) <= ord(t)),(capacity(s,c) * y_pf(pf,s,tt))) =e= accumulated_capacity(pf,t,c);
solve Multiphase_network_design using MIP MIN total_cost;